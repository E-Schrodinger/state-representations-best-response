(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     62648,       1289]
NotebookOptionsPosition[     61073,       1256]
NotebookOutlinePosition[     61553,       1274]
CellTagsIndexPosition[     61510,       1271]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Win Stay, Lose Shift State Space IBR Conditions", "Title",
 CellChangeTimes->{{3.964454919124012*^9, 3.964454965855255*^9}, {
  3.9646372243419704`*^9, 
  3.9646372310201187`*^9}},ExpressionUUID->"df8f70b0-ee67-4644-9cb2-\
8a30a4904cee"],

Cell["\<\
This file contains the Mathematica code for solving for the individual \
best-response conditions for the Win Stay, Lose Shift (WSLS) state space.\
\>", "Subtitle",
 CellChangeTimes->{{3.9644551411478252`*^9, 3.964455194409193*^9}, {
  3.9644552344950695`*^9, 3.9644552534141655`*^9}, {3.964637235892805*^9, 
  3.9646372380352173`*^9}},ExpressionUUID->"ab16a300-c4d7-8d41-980b-\
569b6bfb9703"],

Cell["\<\
We start by writing out all possible strategies of a single agent in a binary \
array. The length of this array is determined by the number of distinct \
states the agent can see. In the WSLS state space, the agent can see two \
states, the Identical state (C,C)/(D,D) and the Opposing state (C,D). An \
agent can play either C or D in each of these states, which means that the \
agent can have 4 distinct strategies; All-D, Anti-WSLS, WSLS, and All-C.\
\>", "Text",
 CellChangeTimes->{{3.9644553920813656`*^9, 3.9644556822987766`*^9}, {
  3.964637243921232*^9, 
  3.964637279833309*^9}},ExpressionUUID->"907140d9-6154-dc4e-8cde-\
c706490a3f88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Converts", " ", "n", " ", "to", " ", "a", " ", "binary", " ", "array", " ",
     "of", " ", "length", " ", "l"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"toBin", "[", 
    RowBox[{"n_", ",", "l_"}], "]"}], ":=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"l", "-", 
        RowBox[{"Length", "[", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"n", ",", "2"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.861343533849256*^9, 3.86134354764645*^9}, {
  3.964455443266567*^9, 3.964455445274288*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7b1f4e01-a91f-074c-a20d-7eb05a28e039"],

Cell["\<\
In the next cell we initialize all the conditions for our environment such as \
the ordering of the social dilemma payoffs (t>r>s>p for PD), as well as the \
bounds for the discount factor d and the exploration parameter e.\
\>", "Text",
 CellChangeTimes->{{3.964463200749506*^9, 3.9644632836704025`*^9}, {
  3.964637118260832*^9, 
  3.964637118267658*^9}},ExpressionUUID->"cdcdd32b-473b-474a-9904-\
4c800b02a1dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "ordering", " ", "of", " ", "the", " ", 
    RowBox[{"game", ".", " ", "The"}], " ", "first", " ", "entry", " ", "has",
     " ", "to", " ", "be", " ", "a", " ", "total", " ", "order"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ordering", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"t", ">", "r", ">", "p", ">", "s"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Drawing", " ", "restrictions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"drestrictions", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"ordering", ",", 
        RowBox[{"0", "<", "d", "<", "1"}], ",", " ", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{"t", ">", "r"}], ",", 
        RowBox[{"t", ">", "p"}], ",", 
        RowBox[{"t", ">", "s"}], ",", 
        RowBox[{"r", ">", "p"}], ",", 
        RowBox[{"r", ">", "s"}], ",", 
        RowBox[{"p", ">", "s"}], ",", 
        RowBox[{"p", ">", "0"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "drestrictions"}]}]], "Input",
 CellChangeTimes->{{3.899349687934226*^9, 3.8993496892323103`*^9}, {
   3.899350426831568*^9, 3.899350431579015*^9}, {3.899351768661285*^9, 
   3.8993517699882593`*^9}, {3.899360967136095*^9, 3.899360968631393*^9}, {
   3.911552445304144*^9, 3.9115524475431347`*^9}, {3.9121550168042192`*^9, 
   3.912155047098929*^9}, {3.912155103332333*^9, 3.912155212010516*^9}, {
   3.912155247123871*^9, 3.912155287290704*^9}, {3.912155334066991*^9, 
   3.912155362621974*^9}, {3.916998443804493*^9, 3.91699844770719*^9}, {
   3.916998481740377*^9, 3.916998549867062*^9}, {3.9169985856073723`*^9, 
   3.916998602451049*^9}, {3.916998643707967*^9, 3.916998655858181*^9}, {
   3.917014719099791*^9, 3.917014726592164*^9}, {3.917014885105007*^9, 
   3.91701488638346*^9}, {3.917014923096636*^9, 3.917014926976183*^9}, {
   3.9170149993837347`*^9, 3.917015000472101*^9}, {3.925956465313961*^9, 
   3.925956471236286*^9}, {3.954598864110094*^9, 3.9545988892467175`*^9}, {
   3.9546897443581905`*^9, 3.954689825115141*^9}, 3.9546935054747124`*^9, 
   3.954693576018711*^9, {3.9548453851728992`*^9, 3.9548453890026283`*^9}, {
   3.954864758337614*^9, 3.9548648245551243`*^9}, {3.963908832150797*^9, 
   3.9639088597062626`*^9}, {3.9644557981203575`*^9, 3.964455805286003*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5c09d658-926b-ca4a-b7af-84a932c027d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", ">", "r", ">", "p", ">", "s"}], ",", 
   RowBox[{"0", "<", "d", "<", "1"}], ",", 
   RowBox[{"0", "<", "e", "<", "1"}], ",", 
   RowBox[{"t", ">", "r"}], ",", 
   RowBox[{"t", ">", "p"}], ",", 
   RowBox[{"t", ">", "s"}], ",", 
   RowBox[{"r", ">", "p"}], ",", 
   RowBox[{"r", ">", "s"}], ",", 
   RowBox[{"p", ">", "s"}], ",", 
   RowBox[{"p", ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.954693634370472*^9, 3.9546936357083416`*^9}, 
   3.9546951724137955`*^9, 3.9548297085379925`*^9, 3.954843487466791*^9, 
   3.9548442028499126`*^9, 3.954845391240656*^9, 3.9548648287571106`*^9, {
   3.9640833916779633`*^9, 3.964083393969063*^9}, 3.9644558140077*^9, 
   3.9645892715658016`*^9, 3.964637123728573*^9, 3.9646757949761295`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5b7dc208-c341-9442-9454-42e4cfa66356"]
}, Open  ]],

Cell["\<\
The result function calculates all the best-response conditions for a single \
strategy. It takes two inputs i_ and strats_. i_ is the strategy we want to \
check the BRs for and strats_ is set of all possible strategies in the state \
space.

We compare the subject i_ for each element in strat_ and look for the \
condition where strat_[j] is BR for i, this function then repeats this for \
all elements in strat_.

For a given i_ and strat_[j] pair in the loop, we first start by ordering the \
Q-values. Q1 are ordered based on strat_[j] and Q2 on i_. We then input these \
orderings into the Bellman equations written below to solve for all the Q1 \
values. Finally, we use the reduce function to check for self-consistency by \
checking under what conditions do the Q-values calculated preserve the \
original orderings of Q1 in strat_[j]. These conditions are added to the \
output array. If the condition outputs False, this means that strat_[j] was \
never a BR for i_ and this is not included in the array.

This is repeated for all elements in strat_. \
\>", "Text",
 CellChangeTimes->{{3.9644646147789593`*^9, 3.964464631308468*^9}, {
  3.9644647403656673`*^9, 
  3.964465210615652*^9}},ExpressionUUID->"fd85db43-ad21-374a-b27b-\
e5ce20cb64f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"result", "[", 
     RowBox[{"i_", ",", " ", "strats_"}], "]"}], ":=", "\[IndentingNewLine]", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"input", " ", "=", " ", "i"}], ",", " ", 
        RowBox[{"str", " ", "=", " ", "strats"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"transpoints", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Check", " ", "every", " ", "strat", " ", "to", " ", "see", " ", 
          "if", " ", "it", " ", "is", " ", "a", " ", "best"}], "-", 
         "response"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"strat", " ", "=", " ", 
            RowBox[{"str", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Get", " ", "an", " ", "ordering", " ", "of", " ", "the", " ", 
              "Q"}], "-", 
             RowBox[{
             "values", " ", "based", " ", "on", " ", "the", " ", "strategy"}],
              "-", "pair"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"assumptions", " ", "=", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "               ", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"strat", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", " ", 
                 RowBox[{"Q100", ">", "Q101"}], ",", " ", 
                 RowBox[{"Q100", "<", "Q101"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "               ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"strat", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", " ", 
                 RowBox[{"Q110", ">", "Q111"}], ",", " ", 
                 RowBox[{"Q110", "<", "Q111"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "               ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", " ", 
                 RowBox[{"Q200", ">", "Q201"}], ",", " ", 
                 RowBox[{"Q200", "<", "Q201"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "               ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"input", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", " ", 
                 RowBox[{"Q210", ">", "Q211"}], ",", " ", 
                 RowBox[{"Q210", "<", "Q211"}]}], "]"}], ",", 
               "\[IndentingNewLine]", "               ", "drestrictions"}], 
              "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Solve", " ", "the", " ", "Bellman", " ", "equations"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Assuming", "[", 
            RowBox[{"assumptions", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"q1", " ", "=", " ", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q200", ">", "Q201"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", " ", 
                   RowBox[{"(", 
                    RowBox[{"p", "+", 
                    RowBox[{"d", "*", "Q100", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", ">", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q101", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", "<", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}], "+",
                   "\[IndentingNewLine]", "                        ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q200", "<", "Q201"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], " ", "*", 
                   RowBox[{"(", 
                    RowBox[{"t", "+", 
                    RowBox[{"d", "*", "Q110", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", ">", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q111", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", "<", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"q2", "=", "  ", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q200", ">", "Q201"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"s", "+", 
                    RowBox[{"d", "*", "Q110", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", ">", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q111", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", "<", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}], "+",
                   "\[IndentingNewLine]", "                        ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q200", "<", "Q201"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", "  ", 
                   RowBox[{"(", 
                    RowBox[{"r", "+", 
                    RowBox[{"d", "*", "Q100", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", ">", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q101", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", "<", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"q3", "=", "  ", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q210", ">", "Q211"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", "  ", 
                   RowBox[{"(", 
                    RowBox[{"p", "+", 
                    RowBox[{"d", "*", "Q100", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", ">", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q101", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", "<", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}], "+",
                   "\[IndentingNewLine]", "                        ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q210", "<", "Q211"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"t", "+", 
                    RowBox[{"d", "*", "Q110", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", ">", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q111", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", "<", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"q4", "=", "  ", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q210", ">", "Q211"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], "*", " ", 
                   RowBox[{"(", 
                    RowBox[{"s", "+", 
                    RowBox[{"d", "*", "Q110", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", ">", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q111", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q110", "<", "Q111"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}], "+",
                   "\[IndentingNewLine]", "                        ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q210", "<", "Q211"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}], " ", "*", 
                   RowBox[{"(", 
                    RowBox[{"r", "+", 
                    RowBox[{"d", "*", "Q100", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", ">", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}], "+", 
                    RowBox[{"d", "*", "Q101", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Boole", "[", 
                    RowBox[{"Q100", "<", "Q101"}], "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "e"}], ")"}]}], "+", 
                    RowBox[{"(", 
                    RowBox[{"e", "/", "2"}], ")"}]}], ")"}]}]}], ")"}]}]}], 
                 "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"sol1", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"q1", "==", "Q100"}], ",", " ", 
                RowBox[{"q2", "==", "Q101"}], ",", " ", 
                RowBox[{"q3", "==", "Q110"}], ",", " ", 
                RowBox[{"q4", "==", "Q111"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "Q100", ",", " ", "Q101", ",", " ", "Q110", ",", " ", "Q111"}],
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Check", " ", "when", " ", "strat", " ", "is", " ", "best"}], "-",
              "response"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"conditions1", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{"Assuming", "[", 
              RowBox[{"assumptions", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Simplify", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"strat", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], " ", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"strat", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"sol1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}], 
              "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"possiblebase", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"conditions1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&&", 
              RowBox[{"conditions1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"possiblebase1", "=", 
            RowBox[{"Assuming", "[", 
             RowBox[{
              RowBox[{"{", "assumptions", "}"}], ",", 
              RowBox[{"Simplify", "[", 
               RowBox[{"Reduce", "[", 
                RowBox[{
                 RowBox[{"possiblebase", "&&", 
                  RowBox[{"r", "<", "t"}], "&&", 
                  RowBox[{"r", ">", "p"}], "&&", 
                  RowBox[{"r", ">", "s"}], "&&", 
                  RowBox[{"t", ">", "p"}], "&&", 
                  RowBox[{"t", ">", "s"}], "&&", 
                  RowBox[{"p", ">", "s"}], "&&", 
                  RowBox[{"0", "<", "d"}], "&&", 
                  RowBox[{"1", ">", "d"}], "&&", 
                  RowBox[{"0", "<", "e"}], "&&", 
                  RowBox[{"1", ">", "e"}]}], ",", "d"}], "]"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"possiblebase1", " ", ",", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"output", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"FromDigits", "[", 
                   RowBox[{"i", ",", "2"}], "]"}], "->", 
                  RowBox[{"j", "-", "1"}]}], ",", "True"}], "}"}]}], "]"}], ",",
              ",", 
             RowBox[{
              RowBox[{"possible", " ", "=", " ", 
               RowBox[{"Assuming", "[", 
                RowBox[{
                 RowBox[{"{", "assumptions", "}"}], ",", 
                 RowBox[{"Simplify", "[", 
                  RowBox[{
                   RowBox[{"conditions1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&&", 
                   RowBox[{"conditions1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"possible", " ", "===", " ", "0"}], ")"}], "==", 
                 "False"}], " ", ",", " ", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"output", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{"i", ",", "2"}], "]"}], "->", 
                    RowBox[{"j", "-", "1"}]}], ",", 
                    RowBox[{"Simplify", "[", "possible", "]"}]}], "}"}]}], 
                 "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.852719955194906*^9, 3.852719990435259*^9}, {
   3.852720066799931*^9, 3.8527200680128603`*^9}, {3.8527201808855677`*^9, 
   3.852720210750543*^9}, {3.85272041949994*^9, 3.852720516656604*^9}, {
   3.852720581337357*^9, 3.8527206666099443`*^9}, {3.852721102350635*^9, 
   3.852721210245535*^9}, {3.8527212424215593`*^9, 3.8527212494326897`*^9}, {
   3.852721344927783*^9, 3.852721365312319*^9}, {3.852721548483873*^9, 
   3.8527215821606197`*^9}, {3.8527219524131536`*^9, 3.852722072046967*^9}, {
   3.852722253346628*^9, 3.8527223140117397`*^9}, {3.852722440983683*^9, 
   3.8527224501486607`*^9}, {3.852722894092395*^9, 3.852722923441407*^9}, {
   3.852723173699586*^9, 3.852723236623042*^9}, {3.8527233650741053`*^9, 
   3.8527234211014967`*^9}, {3.852723498097117*^9, 3.852723566379731*^9}, {
   3.8527236059995623`*^9, 3.8527236135337753`*^9}, {3.85272365627378*^9, 
   3.85272365637675*^9}, {3.852723953366002*^9, 3.852723954226239*^9}, {
   3.8527244912656403`*^9, 3.852724496418502*^9}, {3.852724564117919*^9, 
   3.852724892876009*^9}, {3.8527249684341908`*^9, 3.85272500555278*^9}, {
   3.8527250512220507`*^9, 3.852725240031968*^9}, {3.852725910947191*^9, 
   3.852725923175605*^9}, {3.852725957752239*^9, 3.852725958502234*^9}, {
   3.852726143590617*^9, 3.852726503951165*^9}, {3.852726620470796*^9, 
   3.852726626249661*^9}, {3.852731083208674*^9, 3.852731089832458*^9}, {
   3.8527311240398827`*^9, 3.852731184249825*^9}, {3.852731245119955*^9, 
   3.852731250218904*^9}, {3.852731507812505*^9, 3.852731514425351*^9}, {
   3.852731668745947*^9, 3.852731698069297*^9}, {3.853554918450416*^9, 
   3.853554934836275*^9}, {3.853555038803349*^9, 3.8535550442885427`*^9}, {
   3.853555081241797*^9, 3.8535551398073177`*^9}, {3.8535553859077806`*^9, 
   3.853555407589884*^9}, {3.8535607860473022`*^9, 3.85356079127796*^9}, {
   3.8535608583938437`*^9, 3.8535609273082237`*^9}, {3.8535612596353273`*^9, 
   3.8535612826274033`*^9}, {3.853561936128408*^9, 3.853561975426462*^9}, {
   3.8535620060457287`*^9, 3.853562038019163*^9}, {3.853562072347048*^9, 
   3.853562150971231*^9}, {3.8535622047268133`*^9, 3.8535622202778187`*^9}, {
   3.8535622564095078`*^9, 3.853562289484342*^9}, {3.8535623951608057`*^9, 
   3.853562399826004*^9}, {3.853563348222197*^9, 3.853563356340144*^9}, {
   3.853564504001976*^9, 3.8535645121081667`*^9}, {3.853564940114695*^9, 
   3.8535649403078012`*^9}, {3.853566155704023*^9, 3.853566202438459*^9}, {
   3.85356628037693*^9, 3.853566284190624*^9}, {3.853566337541397*^9, 
   3.853566355462367*^9}, {3.853566428834496*^9, 3.853566434122246*^9}, {
   3.8535665509220657`*^9, 3.853566562008912*^9}, {3.85374256305433*^9, 
   3.853742565675489*^9}, {3.853742628855028*^9, 3.853742635006218*^9}, {
   3.853743400551908*^9, 3.8537434270945663`*^9}, {3.853744027535318*^9, 
   3.8537440310029173`*^9}, {3.853744113474001*^9, 3.853744125345973*^9}, {
   3.853744491192754*^9, 3.8537444943077497`*^9}, {3.853744552077958*^9, 
   3.8537445522943363`*^9}, {3.853744672970086*^9, 3.853744700657062*^9}, {
   3.853757697719707*^9, 3.8537577023737183`*^9}, {3.853757741347123*^9, 
   3.853757744956254*^9}, {3.8537578817356358`*^9, 3.853757883589376*^9}, {
   3.8537579238301*^9, 3.853757930916768*^9}, {3.853758053031817*^9, 
   3.853758055465622*^9}, {3.85375875401427*^9, 3.853758756630865*^9}, {
   3.853759268335581*^9, 3.853759275077148*^9}, {3.8537593967354527`*^9, 
   3.853759401576003*^9}, {3.85375980967988*^9, 3.853759815594824*^9}, {
   3.853761947842812*^9, 3.853761949525255*^9}, {3.8543582195507812`*^9, 
   3.854358236056122*^9}, {3.854358280660664*^9, 3.854358296463464*^9}, {
   3.854358541807025*^9, 3.854358542347954*^9}, {3.854522600160302*^9, 
   3.854522610583475*^9}, {3.85452265078403*^9, 3.854522651303738*^9}, {
   3.854598002344384*^9, 3.854598005257229*^9}, {3.854598058185512*^9, 
   3.854598070618794*^9}, {3.8545981189441767`*^9, 3.854598119131778*^9}, {
   3.85511630406853*^9, 3.855116334694792*^9}, {3.855724041868141*^9, 
   3.855724074631814*^9}, {3.8557242182876797`*^9, 3.8557242190419617`*^9}, {
   3.855724313716951*^9, 3.855724314738391*^9}, {3.8557247320472116`*^9, 
   3.855724733311222*^9}, {3.855724777987369*^9, 3.8557248108672667`*^9}, {
   3.8557289680155888`*^9, 3.8557289730965033`*^9}, {3.855729133541753*^9, 
   3.8557291403114157`*^9}, {3.8557314601696243`*^9, 3.855731466261488*^9}, {
   3.855731591132235*^9, 3.855731593802558*^9}, {3.856849638540773*^9, 
   3.856849650919284*^9}, {3.856856798375515*^9, 3.856856802004915*^9}, {
   3.856857030088176*^9, 3.856857043421013*^9}, {3.8568603525411997`*^9, 
   3.856860352900836*^9}, {3.856930457509056*^9, 3.856930457710569*^9}, {
   3.856931189503522*^9, 3.8569312958121862`*^9}, {3.8569313669798317`*^9, 
   3.8569313774124727`*^9}, {3.856932046774467*^9, 3.856932056737226*^9}, {
   3.856932115096365*^9, 3.856932182680175*^9}, {3.8569327205919952`*^9, 
   3.856932741399013*^9}, {3.856932973374352*^9, 3.856932977507216*^9}, {
   3.856933151554484*^9, 3.856933162952435*^9}, 3.856933221571157*^9, {
   3.856933962862368*^9, 3.85693396707341*^9}, 3.856934075620936*^9, {
   3.856938839288226*^9, 3.8569388398910007`*^9}, {3.856938916345392*^9, 
   3.8569389171338797`*^9}, {3.856938970707973*^9, 3.856938973391467*^9}, {
   3.8569390947377777`*^9, 3.856939095389419*^9}, {3.858169896615815*^9, 
   3.858169924466529*^9}, {3.858170261948036*^9, 3.8581702694269333`*^9}, {
   3.858317807156465*^9, 3.858317807868857*^9}, 3.858317842222107*^9, {
   3.8583216767851954`*^9, 3.858321679671483*^9}, {3.8583217632142*^9, 
   3.858321768060759*^9}, {3.858321818835847*^9, 3.858321820061819*^9}, {
   3.858321901276565*^9, 3.858321901622521*^9}, {3.858321976121566*^9, 
   3.858321976753281*^9}, {3.8583220827919817`*^9, 3.858322083889309*^9}, {
   3.858649193297481*^9, 3.8586492109921017`*^9}, 3.858681037310916*^9, {
   3.859080893897931*^9, 3.8590809157450247`*^9}, {3.859356134993174*^9, 
   3.85935613724263*^9}, {3.859357684285071*^9, 3.859357684455014*^9}, {
   3.859357722709476*^9, 3.8593578136812153`*^9}, {3.859357866821019*^9, 
   3.859357867189426*^9}, {3.859357908166624*^9, 3.859357946678392*^9}, {
   3.859359138924203*^9, 3.8593591398071117`*^9}, {3.8593592325405273`*^9, 
   3.859359234413178*^9}, {3.859359279202649*^9, 3.8593592826754293`*^9}, {
   3.85935932638367*^9, 3.859359329654728*^9}, {3.859359379581142*^9, 
   3.8593593798371143`*^9}, {3.859378546279943*^9, 3.8593785478943644`*^9}, {
   3.859378992548481*^9, 3.859378995308282*^9}, {3.859443494098802*^9, 
   3.859443496047312*^9}, {3.859443619539854*^9, 3.8594436219041653`*^9}, {
   3.859443687236809*^9, 3.859443695541844*^9}, {3.8594437565586357`*^9, 
   3.8594437609193153`*^9}, {3.8594438249178667`*^9, 
   3.8594438274992743`*^9}, {3.85944559092915*^9, 3.859445595281958*^9}, {
   3.859445650732527*^9, 3.859445652568788*^9}, {3.859446376300123*^9, 
   3.8594463782356777`*^9}, {3.859446902981295*^9, 3.859446904687529*^9}, {
   3.859447049220541*^9, 3.859447056034297*^9}, {3.859447199110327*^9, 
   3.859447202830679*^9}, {3.8594484351832123`*^9, 3.859448437169705*^9}, {
   3.8594489045173903`*^9, 3.859448905668345*^9}, {3.859449116234614*^9, 
   3.8594491195097103`*^9}, {3.859449204142589*^9, 3.859449204489159*^9}, {
   3.8594492932911587`*^9, 3.8594492961455793`*^9}, {3.8594494884579363`*^9, 
   3.859449489719619*^9}, {3.859449571081114*^9, 3.859449572637815*^9}, {
   3.859449658250099*^9, 3.859449678446681*^9}, {3.859449755846714*^9, 
   3.859449762981329*^9}, {3.859450354039646*^9, 3.859450362407055*^9}, {
   3.8594507323306217`*^9, 3.8594507324518948`*^9}, {3.8594508731518927`*^9, 
   3.8594508757193613`*^9}, {3.859452847124608*^9, 3.8594528664029818`*^9}, {
   3.859452953476245*^9, 3.859452957576473*^9}, {3.859453054700786*^9, 
   3.8594530603856*^9}, {3.859453098832695*^9, 3.859453099121355*^9}, {
   3.859453337768859*^9, 3.859453346574943*^9}, {3.859453418096177*^9, 
   3.859453432395212*^9}, {3.8594536469887247`*^9, 3.859453650326769*^9}, {
   3.85951582746446*^9, 3.859515832392543*^9}, {3.859515928185749*^9, 
   3.859515938144724*^9}, {3.859516083018152*^9, 3.85951608617579*^9}, {
   3.859516592667859*^9, 3.859516598748363*^9}, {3.859517239537726*^9, 
   3.859517244942636*^9}, {3.8595180122772837`*^9, 3.85951801932626*^9}, {
   3.859518090306177*^9, 3.8595180915911083`*^9}, {3.859524543846006*^9, 
   3.859524544538739*^9}, {3.859524582734229*^9, 3.859524595067601*^9}, {
   3.859524689117456*^9, 3.859524739655753*^9}, {3.859525665492825*^9, 
   3.859525668464718*^9}, {3.859687099296982*^9, 3.859687101920507*^9}, {
   3.859687201866398*^9, 3.859687234033043*^9}, {3.859687295424053*^9, 
   3.8596872964567204`*^9}, {3.8596873458137693`*^9, 3.859687381117688*^9}, {
   3.859687594893112*^9, 3.859687627404814*^9}, {3.859687668041247*^9, 
   3.8596876706508427`*^9}, {3.859687926523378*^9, 3.8596879612289753`*^9}, {
   3.8597193161442738`*^9, 3.85971936932045*^9}, 3.859719421990695*^9, {
   3.859719461004874*^9, 3.8597194665735283`*^9}, 3.859719511536059*^9, {
   3.8597196333065767`*^9, 3.859719725852646*^9}, {3.859719980617318*^9, 
   3.859719995349751*^9}, {3.859720077539638*^9, 3.859720086652234*^9}, {
   3.859771921695753*^9, 3.859771927546369*^9}, {3.859773391066312*^9, 
   3.859773433187764*^9}, {3.859773536255486*^9, 3.859773537892288*^9}, {
   3.859782808145811*^9, 3.859782812947609*^9}, {3.859801810685481*^9, 
   3.859801812863323*^9}, {3.859803762967535*^9, 3.859803771250698*^9}, {
   3.8598041788445253`*^9, 3.8598041816362057`*^9}, {3.8598058197133503`*^9, 
   3.8598058239941177`*^9}, {3.859808315076754*^9, 3.859808336767042*^9}, {
   3.85980916210011*^9, 3.8598091773557262`*^9}, {3.859809233181048*^9, 
   3.859809233774766*^9}, {3.8598093118627567`*^9, 3.85980931716599*^9}, {
   3.859809516365439*^9, 3.859809551951745*^9}, {3.8598095906558733`*^9, 
   3.859809650908791*^9}, {3.8598096893821487`*^9, 3.85980971804126*^9}, {
   3.859809758901923*^9, 3.859809805530699*^9}, {3.859814211144568*^9, 
   3.8598142138216743`*^9}, {3.859814311126239*^9, 3.8598143162750998`*^9}, {
   3.859814440762096*^9, 3.859814446485302*^9}, {3.859814519669161*^9, 
   3.859814521071167*^9}, {3.859814610030884*^9, 3.859814618047882*^9}, {
   3.859856139965706*^9, 3.859856143504045*^9}, {3.859861718731419*^9, 
   3.859861721801515*^9}, {3.859862842053266*^9, 3.859862845200694*^9}, {
   3.859878945902865*^9, 3.8598789795623693`*^9}, {3.8598790177653646`*^9, 
   3.859879021778264*^9}, {3.859879087689554*^9, 3.859879093398573*^9}, 
   3.8598791624652777`*^9, {3.859881644021213*^9, 3.8598816505529413`*^9}, {
   3.859881706629895*^9, 3.859881708151451*^9}, {3.8598819499444838`*^9, 
   3.859881951569903*^9}, {3.8598823948351917`*^9, 3.859882404847177*^9}, {
   3.859884429048704*^9, 3.859884431939439*^9}, {3.8598844800485277`*^9, 
   3.859884485065538*^9}, {3.8598845596293173`*^9, 3.859884563499447*^9}, {
   3.8598847905904217`*^9, 3.859884793264968*^9}, {3.8598951938759947`*^9, 
   3.859895197058729*^9}, {3.860224882472207*^9, 3.860224904767645*^9}, {
   3.860307963368664*^9, 3.8603079664265413`*^9}, {3.860310019863202*^9, 
   3.8603100959811*^9}, {3.860310258606784*^9, 3.860310271284514*^9}, {
   3.8603103915799923`*^9, 3.860310445337996*^9}, {3.860310523011385*^9, 
   3.8603105616368504`*^9}, {3.860311104109755*^9, 3.860311104286022*^9}, {
   3.8603320318149977`*^9, 3.860332034556573*^9}, {3.860332583646927*^9, 
   3.8603325868789043`*^9}, 3.860379244010306*^9, {3.860379350646913*^9, 
   3.8603793523983183`*^9}, {3.860379480383605*^9, 3.86037948716346*^9}, {
   3.8603820469042683`*^9, 3.8603820579221354`*^9}, {3.860382095241267*^9, 
   3.860382097938739*^9}, 3.860387332805339*^9, {3.860387394463472*^9, 
   3.860387396528661*^9}, {3.860471071424*^9, 3.860471074936327*^9}, {
   3.8604712633115396`*^9, 3.860471266756216*^9}, {3.8604834483637247`*^9, 
   3.860483452442264*^9}, {3.8604851237086763`*^9, 3.8604851300818872`*^9}, {
   3.860573143792266*^9, 3.8605731471788473`*^9}, {3.860670813766529*^9, 
   3.860670817447495*^9}, {3.86067899825933*^9, 3.860679005652627*^9}, {
   3.8607275291456013`*^9, 3.860727531981584*^9}, {3.860727893882536*^9, 
   3.860727898818768*^9}, {3.860728885112685*^9, 3.860728888185986*^9}, {
   3.860728947384036*^9, 3.8607289488488283`*^9}, {3.8607289949470882`*^9, 
   3.860729003078619*^9}, {3.860729059161704*^9, 3.860729088565138*^9}, {
   3.8607309428884153`*^9, 3.860730944862115*^9}, {3.860731010072014*^9, 
   3.860731012210988*^9}, {3.860731883059106*^9, 3.8607318852198343`*^9}, {
   3.860732879581048*^9, 3.8607328841669617`*^9}, {3.860738619954577*^9, 
   3.860738624107177*^9}, {3.86076443202129*^9, 3.860764449218227*^9}, {
   3.860764554508687*^9, 3.860764564470668*^9}, {3.860764708676133*^9, 
   3.8607647111656647`*^9}, {3.860765146221457*^9, 3.860765149192369*^9}, {
   3.860822818639679*^9, 3.860822868141011*^9}, {3.860822910093244*^9, 
   3.8608229236253242`*^9}, {3.860823019193729*^9, 3.860823062014265*^9}, {
   3.860823768693451*^9, 3.860823780568211*^9}, {3.860824591788156*^9, 
   3.860824595280819*^9}, {3.8608259363949127`*^9, 3.860825943899901*^9}, {
   3.860826208287166*^9, 3.860826210047365*^9}, {3.86089591964956*^9, 
   3.8608959257426033`*^9}, {3.860896407771771*^9, 3.860896408090569*^9}, {
   3.860897903916033*^9, 3.860897907260009*^9}, {3.8608998863384523`*^9, 
   3.860899890670352*^9}, {3.860912010865049*^9, 3.8609120125968437`*^9}, {
   3.860912083034319*^9, 3.860912083573905*^9}, {3.861024782468485*^9, 
   3.861024787810957*^9}, {3.8610259640542097`*^9, 3.861025970761187*^9}, {
   3.8610266105954638`*^9, 3.8610266139807987`*^9}, {3.861084215203909*^9, 
   3.861084219350892*^9}, 3.86109472001508*^9, {3.861169333798156*^9, 
   3.8611693350996847`*^9}, {3.861169882125276*^9, 3.86116989368181*^9}, {
   3.8611700954569817`*^9, 3.861170133157024*^9}, {3.8611701793479977`*^9, 
   3.86117024385106*^9}, {3.861170388607911*^9, 3.861170520314432*^9}, {
   3.86117057108937*^9, 3.861170719003133*^9}, {3.861170852172888*^9, 
   3.861170862352211*^9}, {3.8611709310224113`*^9, 3.861170988115596*^9}, {
   3.861171089800336*^9, 3.861171090836247*^9}, {3.861171158714732*^9, 
   3.861171170632594*^9}, {3.861171207297304*^9, 3.861171235725437*^9}, {
   3.861171273254847*^9, 3.861171288833105*^9}, {3.861171336291081*^9, 
   3.861171344106921*^9}, {3.86117138373256*^9, 3.861171396044839*^9}, {
   3.861171433265006*^9, 3.861171449609605*^9}, {3.861171957504612*^9, 
   3.861171999041525*^9}, {3.86117205637484*^9, 3.861172063450658*^9}, {
   3.861173208790797*^9, 3.86117325537141*^9}, {3.861174421145473*^9, 
   3.861174427608584*^9}, {3.861174587850814*^9, 3.861174598011539*^9}, {
   3.861174666833229*^9, 3.861174711302908*^9}, 3.861174772241371*^9, {
   3.8611749614856358`*^9, 3.861174964853949*^9}, {3.86117512120592*^9, 
   3.861175123074415*^9}, {3.8611753057547398`*^9, 3.861175327758913*^9}, {
   3.861437595364635*^9, 3.8614375968208427`*^9}, {3.861437930031208*^9, 
   3.861437933633058*^9}, {3.861496575387512*^9, 3.861496576668436*^9}, {
   3.8614996024476967`*^9, 3.861499603830291*^9}, {3.861514877357134*^9, 
   3.861514881162505*^9}, {3.8615909767465677`*^9, 3.8615909780296288`*^9}, {
   3.8615920244022083`*^9, 3.861592026008696*^9}, {3.8615950580044928`*^9, 
   3.861595059502631*^9}, {3.861595209728005*^9, 3.8615952112481537`*^9}, {
   3.861595437565095*^9, 3.8615954406350803`*^9}, {3.861595900194886*^9, 
   3.86159590150716*^9}, {3.86159599646274*^9, 3.861595998660128*^9}, {
   3.861596372263796*^9, 3.86159637541525*^9}, {3.861596821872747*^9, 
   3.861596822960495*^9}, {3.861603142195847*^9, 3.861603143558516*^9}, {
   3.861610173365242*^9, 3.861610174846652*^9}, {3.861610261492379*^9, 
   3.861610264084235*^9}, {3.861610590538978*^9, 3.861610592901561*^9}, {
   3.861611798721924*^9, 3.861611802287568*^9}, {3.8616126405201683`*^9, 
   3.861612642566309*^9}, {3.861613031005857*^9, 3.86161303229583*^9}, {
   3.8616201774465933`*^9, 3.861620179921915*^9}, {3.8616208034527903`*^9, 
   3.861620803632607*^9}, {3.8616211805359287`*^9, 3.861621182972158*^9}, 
   3.8616220182419567`*^9, {3.861622304770941*^9, 3.861622310967621*^9}, {
   3.861622519082293*^9, 3.861622548119953*^9}, {3.861624193688949*^9, 
   3.8616241980256567`*^9}, {3.861628240689596*^9, 3.861628244739718*^9}, {
   3.861628757923305*^9, 3.8616287606376266`*^9}, {3.861700663065278*^9, 
   3.861700664655257*^9}, {3.862137008744676*^9, 3.8621370100636168`*^9}, {
   3.8622312573656063`*^9, 3.8622312613751707`*^9}, {3.86223421642266*^9, 
   3.8622342174148493`*^9}, {3.867387145149441*^9, 3.8673871466484337`*^9}, {
   3.867393913208441*^9, 3.867393914772468*^9}, {3.867394002166992*^9, 
   3.8673940035716963`*^9}, {3.867394047479828*^9, 3.867394055678376*^9}, {
   3.8673972146321783`*^9, 3.867397220101853*^9}, {3.867468740853108*^9, 
   3.8674687427405376`*^9}, {3.867469120875195*^9, 3.8674691259763193`*^9}, {
   3.8674694370400257`*^9, 3.8674694381950893`*^9}, {3.867488971270154*^9, 
   3.8674889734694633`*^9}, {3.867489117375517*^9, 3.8674891266785707`*^9}, {
   3.8677398817810993`*^9, 3.867739883381353*^9}, {3.8677399760132227`*^9, 
   3.8677399777748623`*^9}, {3.867741106391129*^9, 3.8677411106974993`*^9}, {
   3.86774205739637*^9, 3.867742059303835*^9}, {3.867896631934812*^9, 
   3.867896684593555*^9}, {3.867896766133265*^9, 3.8678967684897947`*^9}, {
   3.867896828081822*^9, 3.867896830077393*^9}, {3.867896876848037*^9, 
   3.867896880971484*^9}, {3.8678984331242027`*^9, 3.8678984383142643`*^9}, {
   3.867899284697453*^9, 3.8678992882327747`*^9}, {3.8679001398907623`*^9, 
   3.867900141873363*^9}, {3.868695404770042*^9, 3.868695446536604*^9}, {
   3.868695546647496*^9, 3.868695548260597*^9}, {3.8687000374054813`*^9, 
   3.868700041070706*^9}, {3.869540553812333*^9, 3.869540560401663*^9}, {
   3.86954070293921*^9, 3.869540705053709*^9}, {3.869540814499321*^9, 
   3.869540816244944*^9}, {3.8695412113704*^9, 3.869541216780141*^9}, {
   3.895559683220524*^9, 3.895559689485209*^9}, {3.9115515836491947`*^9, 
   3.911551606520646*^9}, {3.9115516680323753`*^9, 3.91155170063249*^9}, {
   3.911551740431654*^9, 3.911552017534047*^9}, {3.911552055869953*^9, 
   3.9115520804370117`*^9}, {3.911552123972183*^9, 3.911552130548376*^9}, {
   3.911552162749501*^9, 3.911552215836359*^9}, {3.9115522857606497`*^9, 
   3.911552354857093*^9}, {3.911552560671035*^9, 3.911552589993537*^9}, {
   3.912155005218296*^9, 3.912155005764204*^9}, {3.9259564296138573`*^9, 
   3.925956437980342*^9}, {3.9259565063037033`*^9, 3.9259565066154747`*^9}, {
   3.9545983975856133`*^9, 3.954598431266424*^9}, {3.9545984659284744`*^9, 
   3.954598471325403*^9}, {3.9545987720584717`*^9, 3.9545988517081146`*^9}, {
   3.954598915368742*^9, 3.9545989158703613`*^9}, {3.9545990271365833`*^9, 
   3.9545990428349037`*^9}, 3.954666563564148*^9, {3.9546667562505856`*^9, 
   3.954666761635895*^9}, {3.954667171953785*^9, 3.9546671810269623`*^9}, 
   3.9546673829939003`*^9, {3.954667964333706*^9, 3.954667968835541*^9}, {
   3.954668028509737*^9, 3.954668028716009*^9}, {3.954668349164259*^9, 
   3.954668395801817*^9}, {3.9546892398479805`*^9, 3.954689246673464*^9}, {
   3.9546892919944935`*^9, 3.9546892978108864`*^9}, {3.9546893774745407`*^9, 
   3.954689379956213*^9}, {3.954689852520176*^9, 3.9546898533707676`*^9}, {
   3.9546903766243515`*^9, 3.9546903768264084`*^9}, 3.9546906723479366`*^9, {
   3.954690728272558*^9, 3.954690728678404*^9}, {3.9546909601245728`*^9, 
   3.954690962296772*^9}, {3.954691101908348*^9, 3.954691107635872*^9}, {
   3.9546915491622524`*^9, 3.9546915494758797`*^9}, 3.954693380664572*^9, 
   3.9546936818743076`*^9, {3.954694910440716*^9, 3.9546951212677402`*^9}, {
   3.9548310734218483`*^9, 3.954831079387764*^9}, {3.9548403536019573`*^9, 
   3.954840526470936*^9}, 3.9548433881535225`*^9, {3.9634233205745945`*^9, 
   3.963423330922718*^9}, {3.9634235193992825`*^9, 3.963423569276684*^9}, 
   3.963423616773836*^9, {3.9634236577387066`*^9, 3.963423686175644*^9}, {
   3.9634250678941383`*^9, 3.9634251035858307`*^9}, {3.964083168411455*^9, 
   3.9640832198221016`*^9}, 3.9643736270655365`*^9, {3.9643736968679676`*^9, 
   3.964373766370657*^9}, {3.964373888433216*^9, 3.964373889200735*^9}, 
   3.9646352208148537`*^9, {3.9646352539520664`*^9, 3.9646352602790565`*^9}, {
   3.9646758173047905`*^9, 3.964675817377302*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"eb177816-5ab1-447d-b4b2-e61890dbdfee"],

Cell["\<\
In this final cell, we simply write the strats set based on our state space \
choice to enter into the result[] function. the transition set then loops \
over all elements in strat, entering them individually as inputs into the \
result[] function to get the BR conditions for all strategies. We finally \
display this result in a table.\
\>", "Text",
 CellChangeTimes->{{3.9644652229236813`*^9, 3.9644653522515926`*^9}, {
  3.964635945511486*^9, 
  3.9646359467247353`*^9}},ExpressionUUID->"70a73398-9e2c-1446-b1b5-\
ccc8db32d00c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"strats", " ", "=", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"2", "-", 
           RowBox[{"Length", "[", 
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"i", ",", "2"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"All", " ", "best"}], "-", "responses"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"transitions", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"result", "[", 
       RowBox[{
        RowBox[{"strats", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "strats"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Grid", " ", "of", " ", "strategies", " ", "and", " ", "best"}], "-",
     "responses"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grid", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"strats", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], ",", " ", 
       RowBox[{"strats", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"transitions", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"grid", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9634233013851414`*^9, 3.963423322930258*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ca7e318e-42a6-d44c-b422-6de2d24ed046"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[Rule]", "0"}], ",", "True"}], "}"}], "}"}]},
    {"1", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", "s"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", "t"}], ")"}]}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r"}], "+", "s", "-", 
               RowBox[{"4", " ", "d", " ", "s"}], "+", "t", "+", 
               RowBox[{"4", " ", "d", " ", "t"}]}], ")"}]}]}], ">", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "e"}], ")"}], " ", "p"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"2", " ", "d", " ", "t"}]}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"p", "+", "r", "-", "s", "-", "t"}], ")"}]}], "+", 
            RowBox[{"2", " ", "t"}]}], ">", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{"p", "-", "r"}], ")"}]}], "+", "r"}], ")"}]}]}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "2"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", "s"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", "t"}], ")"}]}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r"}], "+", "s", "-", 
               RowBox[{"4", " ", "d", " ", "s"}], "+", "t", "+", 
               RowBox[{"4", " ", "d", " ", "t"}]}], ")"}]}]}], "<", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "e"}], ")"}], " ", "p"}], "+", 
            RowBox[{"2", " ", "s"}], "+", 
            RowBox[{"2", " ", "d", " ", "t"}]}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "s"}], "+", "t"}], ")"}]}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"p", "+", "r", "-", "s", "+", 
               RowBox[{"4", " ", "d", " ", "s"}], "-", "t", "-", 
               RowBox[{"4", " ", "d", " ", "t"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r"}], "-", 
               RowBox[{"d", " ", "s"}], "+", "t", "+", 
               RowBox[{"d", " ", "t"}]}], ")"}]}]}], ">", "0"}]}]}], "}"}]}], 
      "}"}]},
    {"2", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "r"}], ")"}]}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"p", "+", "r", "-", "s", "-", "t"}], ")"}]}], "+", 
            RowBox[{"2", " ", "t"}]}], ">", 
           RowBox[{"2", " ", "r"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "d"}], ")"}], " ", "s"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox["e", "2"], " ", "s"}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"p", "+", "r", "+", 
               RowBox[{"4", " ", "d", " ", "t"}]}], ")"}]}]}], "<", 
           RowBox[{
            RowBox[{"2", " ", "p"}], "+", 
            RowBox[{"2", " ", "d", " ", "t"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox["e", "2"], " ", "t"}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"s", "+", 
               RowBox[{"4", " ", "d", " ", "s"}], "+", "t"}], ")"}]}]}]}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Rule]", "2"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"p", "-", "r"}], ")"}]}], "+", 
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"p", "+", "r", "-", "s", "-", "t"}], ")"}]}], "+", 
            RowBox[{"2", " ", "t"}]}], "<", 
           RowBox[{"2", " ", "r"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"2", " ", "d", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", "r"}], "+", 
            
            RowBox[{"e", " ", 
             RowBox[{"(", 
              RowBox[{"s", "+", "t"}], ")"}]}]}], ">", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"2", " ", "d", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"]}], "+", "e"}], 
              ")"}], " ", "p"}], "+", 
            RowBox[{"e", " ", "r"}], "+", 
            RowBox[{"2", " ", "s"}]}]}]}]}], "}"}]}], "}"}]},
    {"3", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[Rule]", "0"}], ",", "True"}], "}"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9640832512107773`*^9, 3.964083268242092*^9}, 
   3.964373661579607*^9, 3.9643737884356785`*^9, 3.9643738979843273`*^9, 
   3.964635238312832*^9, 3.9646352695793858`*^9, 3.9646371509489574`*^9, {
   3.964675820049671*^9, 3.964675832451929*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"607ccb8a-8d56-fa42-b15c-e05ed7b92c1e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 508},
WindowMargins->{{Automatic, -965.5}, {Automatic, -5.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f3167944-5065-4ef8-ab57-c5fce0f2a52b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 243, 4, 106, "Title",ExpressionUUID->"df8f70b0-ee67-4644-9cb2-8a30a4904cee"],
Cell[826, 28, 403, 7, 91, "Subtitle",ExpressionUUID->"ab16a300-c4d7-8d41-980b-569b6bfb9703"],
Cell[1232, 37, 656, 11, 85, "Text",ExpressionUUID->"907140d9-6154-dc4e-8cde-c706490a3f88"],
Cell[1891, 50, 841, 21, 51, "Input",ExpressionUUID->"7b1f4e01-a91f-074c-a20d-7eb05a28e039"],
Cell[2735, 73, 424, 8, 61, "Text",ExpressionUUID->"cdcdd32b-473b-474a-9904-4c800b02a1dc"],
Cell[CellGroupData[{
Cell[3184, 85, 2510, 47, 135, "Input",ExpressionUUID->"5c09d658-926b-ca4a-b7af-84a932c027d5"],
Cell[5697, 134, 873, 18, 35, "Output",ExpressionUUID->"5b7dc208-c341-9442-9454-42e4cfa66356"]
}, Open  ]],
Cell[6585, 155, 1266, 24, 301, "Text",ExpressionUUID->"fd85db43-ad21-374a-b27b-e5ce20cb64f6"],
Cell[7854, 181, 43245, 795, 1244, "Input",ExpressionUUID->"eb177816-5ab1-447d-b4b2-e61890dbdfee"],
Cell[51102, 978, 542, 10, 85, "Text",ExpressionUUID->"70a73398-9e2c-1446-b1b5-ccc8db32d00c"],
Cell[CellGroupData[{
Cell[51669, 992, 2114, 58, 177, "Input",ExpressionUUID->"ca7e318e-42a6-d44c-b422-6de2d24ed046"],
Cell[53786, 1052, 7259, 200, 254, "Output",ExpressionUUID->"607ccb8a-8d56-fa42-b15c-e05ed7b92c1e"]
}, Open  ]]
}, Open  ]]
}
]
*)

